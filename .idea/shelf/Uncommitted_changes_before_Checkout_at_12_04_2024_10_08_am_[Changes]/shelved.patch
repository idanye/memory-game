Index: memorygame.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nimport threading\r\nimport random\r\nfrom vosk import Model, KaldiRecognizer\r\nimport json\r\nimport sounddevice as sd\r\n\r\npygame.init()\r\npygame.mixer.init()\r\npygame.font.init()\r\npygame.display.set_caption('Memory Game')\r\nmatch_sound = pygame.mixer.Sound('match.wav')\r\n\r\n# Load the VOSK model for offline speech recognition\r\nmodel_path = \"vosk-model-small-en-us-0.15\"\r\nmodel = Model(model_path)\r\nrecognizer = KaldiRecognizer(model, 16000)\r\n\r\n# Initialize global variables for voice control\r\nvoice_command_queue = []\r\nvoice_control_mode = False\r\nselected_cards = []\r\ncards = []\r\nmatched_cards = []\r\ngame_over = False\r\ncurrent_player = 1\r\nscores = {1: 0, 2: 0}\r\ncard_animations = {}  # Track animation state of cards\r\nanimation_in_progress = False\r\nanimation_update_speed = 0.005  # Decrease this value to slow down the animation\r\nnum_players = 1\r\n# Constants for card states\r\nHIDDEN = 0\r\nREVEALED = 1\r\nmatch = False\r\nrunning = True\r\n\r\n# Game settings\r\nscreen_width, screen_height = 640, 480\r\ninfo_bar_height = 100  # Height of the information bar at the top\r\ngame_area_height = screen_height - info_bar_height  # Adjusted height for the game area\r\nscreen = pygame.display.set_mode((screen_width, screen_height))\r\nbg_color = (255, 255, 255)\r\ninfo_bar_color = (230, 230, 230)  # A light grey color for the information bar\r\nbutton_color = (150, 150, 150)  # Color for the reset button\r\nhidden_color = (0, 0, 0)\r\ntext_color = (0, 0, 0)\r\ncolors = [\r\n    (255, 0, 0), (0, 255, 0), (0, 0, 255), (255, 255, 0),\r\n    (255, 0, 255), (0, 255, 255), (128, 0, 0), (0, 128, 0),\r\n    (0, 0, 128), (128, 128, 0), (128, 0, 128), (0, 128, 128),\r\n    (192, 192, 192), (128, 128, 128), (64, 0, 0), (0, 64, 0),\r\n    (0, 0, 64), (64, 64, 0), (64, 0, 64), (0, 64, 64)\r\n]\r\n\r\nfont = pygame.font.SysFont(\"calibri\", 26)  # Creates a default system font of size 36\r\nclock = pygame.time.Clock()  # Set up the clock for controlling frame rate\r\n\r\n\r\n# Function to initialize the microphone and recognizer\r\ndef init_voice_recognition():\r\n    def callback(indata, frames, time, status):\r\n        if recognizer.AcceptWaveform(indata.tobytes()):\r\n            result = json.loads(recognizer.Result())\r\n            command = result.get('text', '').lower().strip()\r\n            if command:\r\n                voice_command_queue.append(command)\r\n\r\n    try:\r\n        with sd.InputStream(callback=callback, dtype='int16', channels=1, samplerate=16000):\r\n            print(\"Voice recognition active. Speak now.\")\r\n            while True:\r\n                pass  # Keep the stream alive until the game ends\r\n\r\n    except Exception as e:\r\n        print(f\"Voice recognition error: {e}\")\r\n\r\n\r\n# Correct place to start the voice recognition thread\r\nvoice_thread = threading.Thread(target=init_voice_recognition, daemon=True)\r\nvoice_thread.start()\r\n\r\n\r\n# Modified to return a boolean indicating whether an action was taken\r\ndef process_voice_commands():\r\n    number_words_to_digits = {\r\n        \"one\": \"1\",\r\n        \"two\": \"2\",\r\n        \"three\": \"3\",\r\n        \"four\": \"4\",\r\n        \"five\": \"5\",\r\n        \"six\": \"6\",\r\n        \"seven\": \"7\",\r\n        \"eight\": \"8\",\r\n        \"nine\": \"9\",\r\n        \"ten\": \"10\",\r\n        \"eleven\": \"11\",\r\n        \"twelve\": \"12\",\r\n        \"thirteen\": \"13\",\r\n        \"fourteen\": \"14\",\r\n        \"fifteen\": \"15\",\r\n        \"sixteen\": \"16\",\r\n        \"seventeen\": \"17\",\r\n        \"eighteen\": \"18\",\r\n        \"nineteen\": \"19\",\r\n        \"twenty\": \"20\"\r\n    }\r\n    action_taken = False  # Flag to track if any action was taken based on a voice command\r\n\r\n    while voice_command_queue:\r\n        command = voice_command_queue.pop(0).strip().lower()\r\n        print(f\"Processing command: {command}\")\r\n\r\n        # Convert number words to digits\r\n        if command in number_words_to_digits:\r\n            command = number_words_to_digits[command]\r\n\r\n            print(f\"{int(command)}: is a number = {command.isdigit()}\")\r\n\r\n        if command.isdigit():\r\n            card_number = int(command) - 1\r\n\r\n            if 0 <= card_number < len(cards):\r\n                handle_card_selection(card_number)\r\n                action_taken = True\r\n\r\n    return action_taken\r\n\r\n\r\ndef match_check_and_handle():\r\n    global selected_cards, matched_cards, scores, current_player, animation_in_progress, match\r\n\r\n    if len(selected_cards) == 2:\r\n        # Perform match checking\r\n        match = check_for_match(cards, selected_cards, matched_cards, match_sound, scores, current_player)\r\n\r\n        if match:\r\n            matched_cards.extend(selected_cards)\r\n            scores[current_player] += 1\r\n            selected_cards.clear()  # Clear only on match to prevent immediate reset.\r\n\r\n        animation_in_progress = False\r\n\r\n    # Handle turn switching here if needed\r\n    if not match and num_players == 2:\r\n        current_player = 1 if current_player == 2 else 2\r\n\r\n\r\ndef handle_card_selection(index):\r\n    global selected_cards, matched_cards, animation_in_progress, current_player, scores, num_players, card_animations\r\n\r\n    if index in selected_cards or index in matched_cards:\r\n        return  # Card already selected or matched, do nothing\r\n\r\n    if len(selected_cards) < 2:\r\n        card_animations[index] = {'progress': 0, 'color': cards[index], 'state': REVEALED}\r\n        selected_cards.append(index)\r\n\r\n    if len(selected_cards) == 2:\r\n        # Delay match checking by setting a timer, do not reset animation_in_progress here\r\n        pygame.time.set_timer(pygame.USEREVENT + 1, 1500)  # 1500 milliseconds delay\r\n\r\n\r\ndef reset_game(colors, cols, rows):\r\n    cards = colors[:cols * rows // 2] * 2\r\n    random.shuffle(cards)\r\n\r\n    return cards, [], [], False, pygame.time.get_ticks(), 1, {1: 0, 2: 0}\r\n\r\n\r\ndef draw_cards(screen, cards, selected_cards, matched_cards, card_width, card_height, cols, hidden_color,\r\n               info_bar_height, card_animations, font):\r\n    \"\"\"\r\n    Draws the cards on the screen, now accounting for animation states.\r\n    \"\"\"\r\n    for index, card in enumerate(cards):\r\n        row, col = divmod(index, cols)\r\n        x = col * card_width\r\n        y = row * card_height + info_bar_height\r\n\r\n        animation = card_animations.get(index)\r\n\r\n        if animation:\r\n            width = card_width * (1 - abs(animation['progress'] - 0.5) * 2)\r\n            x += (card_width - width) / 2\r\n            color = animation['color'] if animation['progress'] >= 0.5 else hidden_color\r\n        else:\r\n            width = card_width\r\n            color = card if index in matched_cards or index in selected_cards else hidden_color\r\n\r\n        rect = pygame.Rect(x, y, width, card_height)\r\n        pygame.draw.rect(screen, color, rect)\r\n        pygame.draw.rect(screen, (0, 0, 0), rect, 3)  # Draw card border\r\n\r\n        # Draw card number if not yet selected or matched\r\n        if index not in matched_cards and index not in selected_cards:\r\n            card_number = font.render(str(index + 1), True, (255, 255, 255))  # Assuming white numbers\r\n            screen.blit(card_number, (\r\n            x + card_width / 2 - card_number.get_width() / 2, y + card_height / 2 - card_number.get_height() / 2))\r\n\r\n\r\ndef check_for_match(cards, selected_cards, matched_cards, match_sound, scores, current_player):\r\n    match = False\r\n\r\n    if len(selected_cards) == 2:\r\n        if cards[selected_cards[0]] == cards[selected_cards[1]]:\r\n            matched_cards.extend(selected_cards)\r\n            scores[current_player] += 1\r\n            match_sound.play()\r\n            match = True\r\n\r\n        selected_cards.clear()\r\n\r\n    return match\r\n\r\n\r\ndef display_text(screen, text, font, color, position):\r\n    \"\"\"\r\n    Renders text on the screen at the specified position.\r\n    \"\"\"\r\n    text_surface = font.render(text, True, color)\r\n    screen.blit(text_surface, position)\r\n\r\n\r\ndef display_difficulty_selection(screen, font, text_color):\r\n    difficulties = [\"Easy\", \"Medium\", \"Hard\"]\r\n    difficulty_rects = []\r\n    screen.fill((255, 255, 255))  # Fill the screen with background color first\r\n\r\n    for index, difficulty in enumerate(difficulties):\r\n        text = font.render(difficulty, True, text_color)\r\n        rect = text.get_rect(center=(320, 120 + index * 60))\r\n        difficulty_rects.append(rect)\r\n        screen.blit(text, rect)\r\n\r\n    pygame.display.flip()  # Update the display to show the changes\r\n\r\n    return difficulty_rects\r\n\r\n\r\ndef display_game_over_message(screen, message, font, text_color, screen_width, screen_height):\r\n    game_over_surface = font.render(message, True, text_color)\r\n    message_box_width = max(200, game_over_surface.get_width() + 20)\r\n    message_box_height = 100\r\n    message_box_x = (screen_width - message_box_width) // 2\r\n    message_box_y = (screen_height - message_box_height) // 2\r\n\r\n    pygame.draw.rect(screen, (100, 100, 100), (message_box_x, message_box_y, message_box_width, message_box_height))\r\n    game_over_x = message_box_x + (message_box_width - game_over_surface.get_width()) // 2\r\n    game_over_y = message_box_y + (message_box_height - game_over_surface.get_height()) // 2\r\n    screen.blit(game_over_surface, (game_over_x, game_over_y))\r\n\r\n\r\ndef main_menu(screen, font, text_color):\r\n    title_text = \"Pick the game player's mode:\"\r\n    title_surface = font.render(title_text, True, text_color)\r\n    title_rect = title_surface.get_rect(center=(320, 240 - 60))\r\n\r\n    button_color = (150, 150, 150)\r\n    button_padding_horizontal = 20  # Increase padding if necessary\r\n    button_spacing = 10\r\n\r\n    one_player_text = font.render('1 Player', True, text_color)\r\n    two_player_text = font.render('2 Players', True, text_color)\r\n    time_attack_text = font.render('Time Attack', True, text_color)\r\n    voice_control_text = font.render('Voice Control', True, text_color)\r\n\r\n    # Calculate button widths based on text widths\r\n    one_player_button_width = one_player_text.get_width() + button_padding_horizontal\r\n    two_player_button_width = two_player_text.get_width() + button_padding_horizontal\r\n    time_attack_button_width = time_attack_text.get_width() + button_padding_horizontal\r\n    voice_control_button_width = voice_control_text.get_width() + button_padding_horizontal\r\n\r\n    # Calculate the total width for all buttons and spaces between them\r\n    total_buttons_width = (one_player_button_width + two_player_button_width + time_attack_button_width\r\n                           + voice_control_button_width + 3 * button_spacing)\r\n\r\n    # Calculate the starting x position to center the buttons\r\n    start_x_position = (screen.get_width() - total_buttons_width) // 2\r\n\r\n    # Define the buttons with the new calculated positions and widths, moving Time Attack to the left\r\n    time_attack_button = pygame.Rect(start_x_position, 240 - 25, time_attack_button_width, 50)\r\n    one_player_button = pygame.Rect(start_x_position + time_attack_button_width + button_spacing, 240 - 25,\r\n                                    one_player_button_width, 50)\r\n    two_player_button = pygame.Rect(\r\n        start_x_position + time_attack_button_width + one_player_button_width + 2 * button_spacing, 240 - 25,\r\n        two_player_button_width, 50)\r\n    voice_control_button = pygame.Rect(\r\n        start_x_position + time_attack_button_width + one_player_button_width + two_player_button_width + 3 * button_spacing,\r\n        240 - 25, voice_control_button_width, 50)\r\n\r\n    screen.fill((255, 255, 255))\r\n\r\n    # Display the buttons and the title\r\n    screen.blit(title_surface, title_rect.topleft)\r\n    pygame.draw.rect(screen, button_color, one_player_button)\r\n    pygame.draw.rect(screen, button_color, two_player_button)\r\n    pygame.draw.rect(screen, button_color, time_attack_button)\r\n    pygame.draw.rect(screen, button_color, voice_control_button)\r\n\r\n    # Blit the button text centered in the buttons\r\n    screen.blit(one_player_text, one_player_text.get_rect(center=one_player_button.center))\r\n    screen.blit(two_player_text, two_player_text.get_rect(center=two_player_button.center))\r\n    screen.blit(time_attack_text, time_attack_text.get_rect(center=time_attack_button.center))\r\n    screen.blit(voice_control_text, voice_control_text.get_rect(center=voice_control_button.center))\r\n\r\n    pygame.display.flip()\r\n\r\n    num_players = None\r\n    time_attack = False\r\n    voice_control = False  # Variable to track if voice control mode is selected\r\n\r\n    while not num_players:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                return\r\n            elif event.type == pygame.MOUSEBUTTONDOWN:\r\n                if one_player_button.collidepoint(event.pos):\r\n                    num_players = 1\r\n                elif two_player_button.collidepoint(event.pos):\r\n                    num_players = 2\r\n                elif time_attack_button.collidepoint(event.pos):\r\n                    num_players = 1  # Time Attack mode is a kind of single-player mode\r\n                    time_attack = True\r\n                elif voice_control_button.collidepoint(event.pos):\r\n                    num_players = 1\r\n                    voice_control = True  # Set voice control mode to True when selected\r\n\r\n    return num_players, time_attack, voice_control\r\n\r\n\r\ndef run_game():\r\n    global voice_control_mode, cards, running, animation_in_progress\r\n\r\n    # Difficulty selection\r\n    difficulty_rects = display_difficulty_selection(screen, font, text_color)\r\n    difficulty = None\r\n\r\n    while difficulty is None:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                return\r\n            elif event.type == pygame.MOUSEBUTTONDOWN:\r\n                for i, rect in enumerate(difficulty_rects):\r\n                    if rect.collidepoint(event.pos):\r\n                        difficulty = [\"Easy\", \"Medium\", \"Hard\"][i]\r\n                        break\r\n\r\n    # Adjust game settings based on difficulty\r\n    cols, rows = {\"Easy\": (3, 4), \"Medium\": (4, 4), \"Hard\": (5, 4)}[difficulty]\r\n    card_width, card_height = screen_width // cols, game_area_height // rows\r\n\r\n    cards, selected_cards, matched_cards, game_over, start_time, current_player, scores = reset_game(colors, cols, rows)\r\n    # Main menu call now returns whether Time Attack mode is selected\r\n    num_players, time_attack_mode, voice_control_mode = main_menu(screen, font, text_color)\r\n\r\n    # Define button sizes and positions\r\n    button_padding_horizontal = 10\r\n    button_padding_vertical = 5\r\n\r\n    # Draw reset button and define play again button\r\n    reset_text = font.render('Reset', True, text_color)\r\n    reset_button_width = reset_text.get_width() + (2 * button_padding_horizontal)\r\n    reset_button_height = font.size('Test')[1] + (2 * button_padding_vertical)\r\n    reset_button_rect = pygame.Rect(10, (info_bar_height - reset_button_height) // 2 + 25, reset_button_width,\r\n                                    reset_button_height)  # Adjusted position\r\n\r\n    play_again_text = font.render('Play Again', True, text_color)\r\n    play_again_button_width = play_again_text.get_width() + (2 * button_padding_horizontal)\r\n    play_again_button_height = reset_button_height\r\n    play_again_button_rect = pygame.Rect(screen_width - play_again_button_width - 10,\r\n                                         (info_bar_height - play_again_button_height) // 2 + 25,\r\n                                         play_again_button_width, play_again_button_height)  # Adjusted position\r\n\r\n    # Main game loop\r\n    end_time = None\r\n    play_again_visible = False\r\n    # Initialize Time Attack mode variables\r\n    time_attack_time_limit = 60\r\n    time_attack_time_decrement = 5\r\n    time_attack_start_time = None\r\n\r\n    while not game_over:\r\n        screen.fill(bg_color)\r\n\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                game_over = True\r\n            elif event.type == pygame.MOUSEBUTTONDOWN and (not animation_in_progress or voice_control_mode):\r\n                mouse_x, mouse_y = event.pos\r\n\r\n                if play_again_visible and play_again_button_rect.collidepoint(mouse_x, mouse_y):\r\n                    cards, selected_cards, matched_cards, game_over, start_time, current_player, scores = reset_game(\r\n                        colors, cols, rows)\r\n                    play_again_visible = False\r\n                    continue\r\n                if not play_again_visible and reset_button_rect.collidepoint(event.pos):\r\n                    cards, selected_cards, matched_cards, game_over, start_time, current_player, scores = reset_game(\r\n                        colors, cols, rows)\r\n                elif not play_again_visible:\r\n                    if mouse_y > info_bar_height:\r\n                        col = mouse_x // card_width\r\n                        row = (mouse_y - info_bar_height) // card_height\r\n                        index = row * cols + col\r\n\r\n                        if 0 <= index < len(cards):\r\n                            handle_card_selection(index)\r\n\r\n            # Handle the event to flip cards back over\r\n            if event.type == pygame.USEREVENT + 1:\r\n                match_check_and_handle()\r\n\r\n                if not match:\r\n                    for idx in selected_cards:\r\n                        card_animations[idx] = {'progress': 0, 'color': hidden_color, 'state': HIDDEN}\r\n\r\n                selected_cards.clear()\r\n                pygame.time.set_timer(pygame.USEREVENT + 1, 0)  # Stop the timer\r\n\r\n        # Modification: Added handling for updating the screen after voice command processing\r\n        if voice_control_mode and process_voice_commands():  # Check if a command was processed and an action was taken\r\n            # This ensures we give time to see the second card before checking for a match\r\n            pass\r\n            # pygame.time.set_timer(pygame.USEREVENT + 1, 1500)  # Delay before flipping back if no match\r\n\r\n        # Time Attack mode logic\r\n        if time_attack_mode and not game_over:\r\n            current_time = pygame.time.get_ticks()\r\n\r\n            if time_attack_start_time is None:\r\n                time_attack_start_time = current_time\r\n\r\n            elapsed_time = (current_time - time_attack_start_time) // 1000\r\n            remaining_time = time_attack_time_limit - elapsed_time\r\n\r\n            if remaining_time <= 0:\r\n                game_over = True\r\n                play_again_visible = True  # Show play again option\r\n                time_attack_mode = False  # Exit Time Attack mode\r\n\r\n        # If the game is over, handle the continuation for Time Attack mode or show game over message\r\n        message = \"\"\r\n\r\n        if game_over:\r\n            play_again_visible = True\r\n\r\n            if time_attack_mode:\r\n                if len(matched_cards) == len(cards):\r\n                    # Reset the game for Time Attack with a reduced time limit\r\n                    time_attack_time_limit = max(10, time_attack_time_limit - time_attack_time_decrement)\r\n                    cards, selected_cards, matched_cards, game_over, start_time, current_player, scores = reset_game(\r\n                        colors, cols, rows)\r\n                    time_attack_start_time = pygame.time.get_ticks()  # Restart the time attack timer\r\n                    play_again_visible = False  # We're starting a new round, so hide the play again button\r\n                else:\r\n                    # Display the appropriate game over message for either mode\r\n                    message = \"Time's up! Try again?\"\r\n            else:\r\n                # Regular mode game over handling\r\n                if num_players == 2:\r\n                    if scores[1] > scores[2]:\r\n                        message = f'Player 1 Wins with {scores[1]} Points!'\r\n                    elif scores[2] > scores[1]:\r\n                        message = f'Player 2 Wins with {scores[2]} Points!'\r\n                    else:  # Handle tie scenario\r\n                        message = 'The game is a Tie!'\r\n                else:\r\n                    message = \"Well done!\" if len(matched_cards) == len(cards) else \"Game Over!\"\r\n\r\n            if message:  # Display the game over message if it's set\r\n                display_game_over_message(screen, message, font, text_color, screen_width, screen_height)\r\n\r\n        # Draw UI elements like info bar, reset button, and timer\r\n        pygame.draw.rect(screen, info_bar_color, (0, 0, screen_width, info_bar_height))\r\n        pygame.draw.rect(screen, button_color, reset_button_rect)\r\n        screen.blit(reset_text,\r\n                    (reset_button_rect.x + button_padding_horizontal, reset_button_rect.y + button_padding_vertical))\r\n\r\n        # Timer logic and rendering in the info bar\r\n        current_time = pygame.time.get_ticks()\r\n\r\n        if len(matched_cards) == len(cards) and not game_over:  # Check if all cards have been matched\r\n            game_over = True\r\n            end_time = current_time  # Capture end time at the moment game ends\r\n            play_again_visible = True\r\n\r\n        if not game_over:\r\n            elapsed_time = (current_time - start_time) // 1000\r\n        else:\r\n            elapsed_time = (end_time - start_time) // 1000\r\n\r\n        # Prevent elapsed time from going negative\r\n        elapsed_time = max(0, elapsed_time)\r\n\r\n        timer_minutes = elapsed_time // 60\r\n        timer_seconds = elapsed_time % 60\r\n        timer_text = f'{timer_minutes:02}:{timer_seconds:02}'\r\n        timer_surface = font.render(timer_text, True, text_color, info_bar_color)\r\n        timer_rect = timer_surface.get_rect(center=((screen_width // 2), (info_bar_height // 2) + 25))\r\n        screen.blit(timer_surface, timer_rect)\r\n\r\n        if play_again_visible:\r\n            pygame.draw.rect(screen, button_color, play_again_button_rect)\r\n            screen.blit(play_again_text, (\r\n                play_again_button_rect.x + button_padding_horizontal,\r\n                play_again_button_rect.y + button_padding_vertical))\r\n\r\n        # Display scores and current player's turn for 2 Player mode\r\n        if num_players == 2:\r\n            display_text(screen, f\"Player 1: {scores[1]} - Player 2: {scores[2]}\", font, text_color, (10, 10))\r\n            display_text(screen, f\"Player {current_player}'s Turn\", font, text_color, (screen_width - 220, 10))\r\n\r\n        # Animation logic to update or clear animations\r\n        to_remove = []\r\n\r\n        for index, animation in card_animations.items():\r\n            if animation['state'] == REVEALED:\r\n                animation['progress'] += animation_update_speed\r\n                if animation['progress'] >= 1:\r\n                    animation_in_progress = False\r\n                    to_remove.append(index)\r\n\r\n            elif animation['state'] == HIDDEN:\r\n                animation['progress'] += animation_update_speed\r\n\r\n                if animation['progress'] >= 1:\r\n                    matched_cards.remove(index)  # Remove from matched_cards if it's not a match\r\n                    to_remove.append(index)\r\n\r\n        for index in to_remove:\r\n            del card_animations[index]\r\n\r\n        draw_cards(screen, cards, selected_cards, matched_cards, card_width, card_height, cols, hidden_color,\r\n                   info_bar_height, card_animations, font)\r\n        pygame.display.flip()\r\n        clock.tick(60)  # Maintain a steady frame rate\r\n\r\n    pygame.quit()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    try:\r\n        run_game()\r\n    except Exception as e:\r\n        print(f\"Error: {e}\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/memorygame.py b/memorygame.py
--- a/memorygame.py	(revision d59f9d86bd3278ce112960244076215eaec1bdaf)
+++ b/memorygame.py	(date 1712164471296)
@@ -137,7 +137,10 @@
         if match:
             matched_cards.extend(selected_cards)
             scores[current_player] += 1
-            selected_cards.clear()  # Clear only on match to prevent immediate reset.
+            selected_cards.clear()  # Clear only if there's a match
+        else:
+            # If no match, do not clear selected_cards here; delay this action
+            pygame.time.set_timer(pygame.USEREVENT + 2, 1000)  # Set a delay to clear selected_cards
 
         animation_in_progress = False
 
@@ -149,16 +152,16 @@
 def handle_card_selection(index):
     global selected_cards, matched_cards, animation_in_progress, current_player, scores, num_players, card_animations
 
-    if index in selected_cards or index in matched_cards:
-        return  # Card already selected or matched, do nothing
+    # Allow re-selection of cards that are not matched yet
+    if index in matched_cards:
+        return  # Prevent re-selection of matched cards
 
-    if len(selected_cards) < 2:
-        card_animations[index] = {'progress': 0, 'color': cards[index], 'state': REVEALED}
+    if index not in selected_cards:
+        card_animations[index] = {'progress': 0, 'color': cards[index], 'state': 'REVEALED'}
         selected_cards.append(index)
 
     if len(selected_cards) == 2:
-        # Delay match checking by setting a timer, do not reset animation_in_progress here
-        pygame.time.set_timer(pygame.USEREVENT + 1, 1500)  # 1500 milliseconds delay
+        animation_in_progress = True
 
 
 def reset_game(colors, cols, rows):
@@ -388,7 +391,7 @@
         for event in pygame.event.get():
             if event.type == pygame.QUIT:
                 game_over = True
-            elif event.type == pygame.MOUSEBUTTONDOWN and (not animation_in_progress or voice_control_mode):
+            elif event.type == pygame.MOUSEBUTTONDOWN and not animation_in_progress:
                 mouse_x, mouse_y = event.pos
 
                 if play_again_visible and play_again_button_rect.collidepoint(mouse_x, mouse_y):
@@ -408,22 +411,22 @@
                         if 0 <= index < len(cards):
                             handle_card_selection(index)
 
-            # Handle the event to flip cards back over
-            if event.type == pygame.USEREVENT + 1:
-                match_check_and_handle()
+                if len(selected_cards) == 2:
+                    # Start the timer to delay match checking
+                    match_check_and_handle()
+                    pygame.time.set_timer(pygame.USEREVENT + 1, 1000, True)  # 1 second delay
 
-                if not match:
-                    for idx in selected_cards:
-                        card_animations[idx] = {'progress': 0, 'color': hidden_color, 'state': HIDDEN}
+            # Handle the event to flip cards back over
+            elif event.type == pygame.USEREVENT + 2:
+                for idx in selected_cards:
+                    card_animations[idx] = {'progress': 0, 'color': hidden_color, 'state': HIDDEN}
 
                 selected_cards.clear()
-                pygame.time.set_timer(pygame.USEREVENT + 1, 0)  # Stop the timer
+                pygame.time.set_timer(pygame.USEREVENT + 2, 0)  # Stop the timer
 
         # Modification: Added handling for updating the screen after voice command processing
         if voice_control_mode and process_voice_commands():  # Check if a command was processed and an action was taken
-            # This ensures we give time to see the second card before checking for a match
             pass
-            # pygame.time.set_timer(pygame.USEREVENT + 1, 1500)  # Delay before flipping back if no match
 
         # Time Attack mode logic
         if time_attack_mode and not game_over:
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0af02323-b408-4d10-9836-8daf5e127466\" name=\"Changes\" comment=\"Voice recognition working and showing card colors, but flips back not automatically and doesn't wait for the second card to open. &#10;Also clicking the cards doesn't work!! &#10;Yay!!!\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/memorygame.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/memorygame.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;idanye&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"e179a921-4bf1-4722-8336-f4452c7a681f\" />\r\n        <option name=\"url\" value=\"https://github.com/idanye/assignment1-exercise1.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2eLniYBAXWYEHBwE9KXjg3H9X8w\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.main.executor\": \"Run\",\r\n    \"Python.memorygame.executor\": \"Run\",\r\n    \"Python.test.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"last_opened_file_path\": \"C:/Users/idany/Uni_IDC/Third_Year_'23/Semester_2/Intro to Computer Graphics/HW/ex1\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\idany\\Uni_IDC\\Third_Year_'23\\Semester_2\\From Idea To Reality- App Using AI\\Homework\\HW1\\assignment1-exercise1\\memory_game\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.memorygame\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"assignment1-exercise1\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/memory_game\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/memory_game/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"memorygame\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"assignment1-exercise1\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/memorygame.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"assignment1-exercise1\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/test.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.memorygame\" />\r\n        <item itemvalue=\"Python.test\" />\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-09665e90c3a7-b11f5e8da5ad-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.15026.15\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0af02323-b408-4d10-9836-8daf5e127466\" name=\"Changes\" comment=\"\" />\r\n      <created>1711692853787</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1711692853787</updated>\r\n      <workItem from=\"1711692856405\" duration=\"3337000\" />\r\n      <workItem from=\"1711729794378\" duration=\"3106000\" />\r\n      <workItem from=\"1711786815194\" duration=\"10054000\" />\r\n      <workItem from=\"1711877763836\" duration=\"4677000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Created initial project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711693094927</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711693094927</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Basic game works, doesn't automatically closes when game finishes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711730395693</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711730395693</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Basic game works, *automatically* closes when game finishes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711731428300</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711731428300</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Basic game works, *automatically* closes when game finishes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711731456483</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711731456483</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Rolled back changes, Added feature 1- timer in info bar, but cuts lower cards\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711739721249</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711739721249</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Added feature 3- reset button in info bar\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711741134899</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711741134899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Added feature 3- reset button in info bar\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711741420158</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711741420158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Play Again button showing up in info station but not correctly\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711741941098</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711741941098</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Play Again button and well done not shown\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711742692380</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711742692380</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Still Play Again button and well done not shown\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711744845749</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711744845749</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Trying to make the 4 feature work, not there yet\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711745696820</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711745696820</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Well done message and play again working now\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711787706869</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711787706869</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Added interesting feature of difficulty: Hard, Medium, Easy to the game by the user's choice\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711788934058</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711788934058</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Added interesting feature of difficulty: Hard, Medium, Easy to the game by the user's choice\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711788940213</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711788940213</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Well done message shown in the middle of the screen like a pop up message window\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711791031292</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711791031292</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Fixing timer not shown in the end of the game and info bar objects not alligned similarly\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711791975563</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711791975563</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Fixing play again text not appearing in the correct time and not alligned correctly\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711794608770</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711794608770</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Play again button fixed- until 2-player support all working\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711798611881</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711798611881</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Trying to make the 2-player choice work\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711805253673</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711805253673</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"2-player choice screen looks correct, but still not functioning\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711806685765</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711806685765</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Clicking the player's buttons when chosing the mode doesn't work.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711811083054</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711811083054</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Chosing a game mode, 1/2 players works, but 2 Player's mode doesn't show\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711812370069</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711812370069</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Still trying to make the 2 Player mode appear on the game screen\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711816296867</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711816296867</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Still trying to make the 2 Player mode appear on the game screen--- Freezing timer working\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711826234512</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711826234512</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"2 Player mode working correctly!!\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711830524668</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711830524668</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"2 Player mode with announcing the winner at the end\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711878498950</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711878498950</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"2 Player mode with timer number fixed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711878739359</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711878739359</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Added Time attack mode, every thing works but button doesn't cover the entire text\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711884586040</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711884586040</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Card animation working, only that the next card opens before the current card is closed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711886733543</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711886733543</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Card animation working correctly\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711890951264</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711890951264</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Voice control button works but the logic of it doesn't work yet\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711892709711</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711892709711</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"Recognizes commands said but doesn't change the screen as a result.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711897320492</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711897320492</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"Commands still not working but voice control commands recognized and voice functions working correctly\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711987547208</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711987547208</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"Voice recognition working but card colors, flipping back/logic not working\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711988148268</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711988148268</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"Voice recognition not showing card colors, flipping back not working but now limiting number of open cards.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1711989597595</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1711989597595</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"Voice recognition working and showing card colors, but flips back not automatically and doesn't wait for the second card to open. &#10;Also clicking the cards doesn't work!! &#10;Yay!!!\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1712127135102</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1712127135102</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"37\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"false\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Trying to make the 4 feature work, not there yet\" />\r\n    <MESSAGE value=\"Well done message and play again working now\" />\r\n    <MESSAGE value=\"Added interesting feature of difficulty: Hard, Medium, Easy to the game by the user's choice\" />\r\n    <MESSAGE value=\"Well done message shown in the middle of the screen like a pop up message window\" />\r\n    <MESSAGE value=\"Fixing timer not shown in the end of the game and info bar objects not alligned similarly\" />\r\n    <MESSAGE value=\"Fixing play again text not appearing in the correct time and not alligned correctly\" />\r\n    <MESSAGE value=\"Play again button fixed- until 2-player support all working\" />\r\n    <MESSAGE value=\"Trying to make the 2-player choice work\" />\r\n    <MESSAGE value=\"2-player choice screen looks correct, but still not functioning\" />\r\n    <MESSAGE value=\"Clicking the player's buttons when chosing the mode doesn't work.\" />\r\n    <MESSAGE value=\"Chosing a game mode, 1/2 players works, but 2 Player's mode doesn't show\" />\r\n    <MESSAGE value=\"Still trying to make the 2 Player mode appear on the game screen\" />\r\n    <MESSAGE value=\"Still trying to make the 2 Player mode appear on the game screen--- Freezing timer working\" />\r\n    <MESSAGE value=\"2 Player mode working correctly!!\" />\r\n    <MESSAGE value=\"2 Player mode with announcing the winner at the end\" />\r\n    <MESSAGE value=\"2 Player mode with timer number fixed\" />\r\n    <MESSAGE value=\"Added Time attack mode, every thing works but button doesn't cover the entire text\" />\r\n    <MESSAGE value=\"Card animation working, only that the next card opens before the current card is closed\" />\r\n    <MESSAGE value=\"Card animation working correctly\" />\r\n    <MESSAGE value=\"Voice control button works but the logic of it doesn't work yet\" />\r\n    <MESSAGE value=\"Recognizes commands said but doesn't change the screen as a result.\" />\r\n    <MESSAGE value=\"Commands still not working but voice control commands recognized and voice functions working correctly\" />\r\n    <MESSAGE value=\"Voice recognition working but card colors, flipping back/logic not working\" />\r\n    <MESSAGE value=\"Voice recognition not showing card colors, flipping back not working but now limiting number of open cards.\" />\r\n    <MESSAGE value=\"Voice recognition working and showing card colors, but flips back not automatically and doesn't wait for the second card to open. &#10;Also clicking the cards doesn't work!! &#10;Yay!!!\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Voice recognition working and showing card colors, but flips back not automatically and doesn't wait for the second card to open. &#10;Also clicking the cards doesn't work!! &#10;Yay!!!\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/memorygame.py</url>\r\n          <line>119</line>\r\n          <option name=\"timeStamp\" value=\"30\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/memorygame.py</url>\r\n          <line>85</line>\r\n          <option name=\"timeStamp\" value=\"42\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/assignment1_exercise1$memorygame.coverage\" NAME=\"memorygame Coverage Results\" MODIFIED=\"1712132439214\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/assignment1_exercise1$test.coverage\" NAME=\"test Coverage Results\" MODIFIED=\"1711893860539\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/assignment1_exercise1$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1711730217666\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/memory_game\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d59f9d86bd3278ce112960244076215eaec1bdaf)
+++ b/.idea/workspace.xml	(date 1712905604322)
@@ -4,7 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0af02323-b408-4d10-9836-8daf5e127466" name="Changes" comment="Voice recognition working and showing card colors, but flips back not automatically and doesn't wait for the second card to open. &#10;Also clicking the cards doesn't work!! &#10;Yay!!!">
+    <list default="true" id="0af02323-b408-4d10-9836-8daf5e127466" name="Changes" comment="Voice recognition working, not showing colors or animation and remaining open.&#10;Also clicking the cards doesn't work in voice recog">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/memorygame.py" beforeDir="false" afterPath="$PROJECT_DIR$/memorygame.py" afterDir="false" />
     </list>
@@ -54,7 +54,7 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "git-widget-placeholder": "main",
-    "last_opened_file_path": "C:/Users/idany/Uni_IDC/Third_Year_'23/Semester_2/Intro to Computer Graphics/HW/ex1",
+    "last_opened_file_path": "C:/Users/idany/Uni_IDC/Third_Year_'23/Semester_2/From Idea To Reality- App Using AI/Homework/HW1/assignment1-exercise1",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
@@ -165,6 +165,10 @@
       <workItem from="1711729794378" duration="3106000" />
       <workItem from="1711786815194" duration="10054000" />
       <workItem from="1711877763836" duration="4677000" />
+      <workItem from="1712157980985" duration="666000" />
+      <workItem from="1712326294966" duration="201000" />
+      <workItem from="1712504659609" duration="248000" />
+      <workItem from="1712905230630" duration="371000" />
     </task>
     <task id="LOCAL-00001" summary="Created initial project">
       <option name="closed" value="true" />
@@ -454,7 +458,15 @@
       <option name="project" value="LOCAL" />
       <updated>1712127135102</updated>
     </task>
-    <option name="localTasksCounter" value="37" />
+    <task id="LOCAL-00037" summary="Voice recognition working, not showing colors or animation and remaining open.&#10;Also clicking the cards doesn't work in voice recog">
+      <option name="closed" value="true" />
+      <created>1712147929082</created>
+      <option name="number" value="00037" />
+      <option name="presentableId" value="LOCAL-00037" />
+      <option name="project" value="LOCAL" />
+      <updated>1712147929082</updated>
+    </task>
+    <option name="localTasksCounter" value="38" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -478,7 +490,6 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="Trying to make the 4 feature work, not there yet" />
     <MESSAGE value="Well done message and play again working now" />
     <MESSAGE value="Added interesting feature of difficulty: Hard, Medium, Easy to the game by the user's choice" />
     <MESSAGE value="Well done message shown in the middle of the screen like a pop up message window" />
@@ -503,7 +514,8 @@
     <MESSAGE value="Voice recognition working but card colors, flipping back/logic not working" />
     <MESSAGE value="Voice recognition not showing card colors, flipping back not working but now limiting number of open cards." />
     <MESSAGE value="Voice recognition working and showing card colors, but flips back not automatically and doesn't wait for the second card to open. &#10;Also clicking the cards doesn't work!! &#10;Yay!!!" />
-    <option name="LAST_COMMIT_MESSAGE" value="Voice recognition working and showing card colors, but flips back not automatically and doesn't wait for the second card to open. &#10;Also clicking the cards doesn't work!! &#10;Yay!!!" />
+    <MESSAGE value="Voice recognition working, not showing colors or animation and remaining open.&#10;Also clicking the cards doesn't work in voice recog" />
+    <option name="LAST_COMMIT_MESSAGE" value="Voice recognition working, not showing colors or animation and remaining open.&#10;Also clicking the cards doesn't work in voice recog" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -522,7 +534,7 @@
     </breakpoint-manager>
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/assignment1_exercise1$memorygame.coverage" NAME="memorygame Coverage Results" MODIFIED="1712132439214" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/assignment1_exercise1$memorygame.coverage" NAME="memorygame Coverage Results" MODIFIED="1712905272947" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/assignment1_exercise1$test.coverage" NAME="test Coverage Results" MODIFIED="1711893860539" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/assignment1_exercise1$main.coverage" NAME="main Coverage Results" MODIFIED="1711730217666" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/memory_game" />
   </component>
